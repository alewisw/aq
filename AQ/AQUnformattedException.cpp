//==============================================================================
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0.If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
//==============================================================================

//------------------------------------------------------------------------------
// Includes
//------------------------------------------------------------------------------

#include "AQUnformattedException.h"

using namespace std;




//------------------------------------------------------------------------------
// Private Macros
//------------------------------------------------------------------------------




//------------------------------------------------------------------------------
// Private Type Definitions
//------------------------------------------------------------------------------




//------------------------------------------------------------------------------
// Private Function and Class Declarations
//------------------------------------------------------------------------------




//------------------------------------------------------------------------------
// Variable Declarations
//------------------------------------------------------------------------------




//------------------------------------------------------------------------------
// Function and Class Implementation
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
AQUnformattedException::AQUnformattedException(const std::string& msg)
    : runtime_error(msg)
{
}

//------------------------------------------------------------------------------
AQUnformattedException::AQUnformattedException(const AQUnformattedException& other)
    : runtime_error(other)
{
}

//------------------------------------------------------------------------------
AQUnformattedException& AQUnformattedException::operator=(const AQUnformattedException& other)
{
    if (this != &other)
    {
        runtime_error::operator=(other);
    }
    return *this;
}

//------------------------------------------------------------------------------
AQUnformattedException::~AQUnformattedException(void)
{
}




//=============================== End of File ==================================
